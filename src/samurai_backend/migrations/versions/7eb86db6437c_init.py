"""Init

Revision ID: 7eb86db6437c
Revises:
Create Date: 2024-03-16 11:12:34.993870

"""

import sqlalchemy as sa
import sqlmodel
from alembic import op

# revision identifiers, used by Alembic.
revision = "7eb86db6437c"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "accountmodel",
        sa.Column("account_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("username", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("first_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("middle_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("last_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("registration_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_email_verified", sa.Boolean(), nullable=False),
        sa.Column("salt", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("account_id"),
    )
    op.create_index(
        op.f("ix_accountmodel_account_id"), "accountmodel", ["account_id"], unique=False
    )
    op.create_index(op.f("ix_accountmodel_email"), "accountmodel", ["email"], unique=True)
    op.create_index(op.f("ix_accountmodel_username"), "accountmodel", ["username"], unique=True)
    op.create_table(
        "accountpermission",
        sa.Column("account_permission_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("account_permission_id"),
    )
    op.create_index(
        op.f("ix_accountpermission_account_permission_id"),
        "accountpermission",
        ["account_permission_id"],
        unique=False,
    )
    op.create_index(op.f("ix_accountpermission_name"), "accountpermission", ["name"], unique=True)
    op.create_table(
        "departmentmodel",
        sa.Column("department_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.PrimaryKeyConstraint("department_id"),
    )
    op.create_index(
        op.f("ix_departmentmodel_department_id"), "departmentmodel", ["department_id"], unique=False
    )
    op.create_index(op.f("ix_departmentmodel_name"), "departmentmodel", ["name"], unique=True)
    op.create_table(
        "accountpermissionaccountlink",
        sa.Column("account_permission_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("account_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accountmodel.account_id"],
        ),
        sa.ForeignKeyConstraint(
            ["account_permission_id"],
            ["accountpermission.account_permission_id"],
        ),
        sa.PrimaryKeyConstraint("account_permission_id", "account_id"),
    )
    op.create_table(
        "facultymodel",
        sa.Column("faculty_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("department_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departmentmodel.department_id"],
        ),
        sa.PrimaryKeyConstraint("faculty_id"),
    )
    op.create_index(
        op.f("ix_facultymodel_department_id"), "facultymodel", ["department_id"], unique=False
    )
    op.create_index(
        op.f("ix_facultymodel_faculty_id"), "facultymodel", ["faculty_id"], unique=False
    )
    op.create_table(
        "groupmodel",
        sa.Column("group_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("faculty_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.ForeignKeyConstraint(
            ["faculty_id"],
            ["facultymodel.faculty_id"],
        ),
        sa.PrimaryKeyConstraint("group_id"),
    )
    op.create_index(op.f("ix_groupmodel_group_id"), "groupmodel", ["group_id"], unique=False)
    op.create_table(
        "connectionmodel",
        sa.Column("connection_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("group_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("faculty_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.Column("department_id", sqlmodel.sql.sqltypes.GUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departmentmodel.department_id"],
        ),
        sa.ForeignKeyConstraint(
            ["faculty_id"],
            ["facultymodel.faculty_id"],
        ),
        sa.ForeignKeyConstraint(
            ["group_id"],
            ["groupmodel.group_id"],
        ),
        sa.PrimaryKeyConstraint("connection_id"),
    )
    op.create_index(
        op.f("ix_connectionmodel_connection_id"), "connectionmodel", ["connection_id"], unique=False
    )
    op.create_table(
        "connectionlinkmodel",
        sa.Column("account_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.Column("connection_id", sqlmodel.sql.sqltypes.GUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["account_id"],
            ["accountmodel.account_id"],
        ),
        sa.ForeignKeyConstraint(
            ["connection_id"],
            ["connectionmodel.connection_id"],
        ),
        sa.PrimaryKeyConstraint("account_id", "connection_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("connectionlinkmodel")
    op.drop_index(op.f("ix_connectionmodel_connection_id"), table_name="connectionmodel")
    op.drop_table("connectionmodel")
    op.drop_index(op.f("ix_groupmodel_group_id"), table_name="groupmodel")
    op.drop_table("groupmodel")
    op.drop_index(op.f("ix_facultymodel_faculty_id"), table_name="facultymodel")
    op.drop_index(op.f("ix_facultymodel_department_id"), table_name="facultymodel")
    op.drop_table("facultymodel")
    op.drop_table("accountpermissionaccountlink")
    op.drop_index(op.f("ix_departmentmodel_name"), table_name="departmentmodel")
    op.drop_index(op.f("ix_departmentmodel_department_id"), table_name="departmentmodel")
    op.drop_table("departmentmodel")
    op.drop_index(op.f("ix_accountpermission_name"), table_name="accountpermission")
    op.drop_index(
        op.f("ix_accountpermission_account_permission_id"), table_name="accountpermission"
    )
    op.drop_table("accountpermission")
    op.drop_index(op.f("ix_accountmodel_username"), table_name="accountmodel")
    op.drop_index(op.f("ix_accountmodel_email"), table_name="accountmodel")
    op.drop_index(op.f("ix_accountmodel_account_id"), table_name="accountmodel")
    op.drop_table("accountmodel")
    # ### end Alembic commands ###
